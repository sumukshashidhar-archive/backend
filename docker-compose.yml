version: '3'
services:
  # the hello world service
  # deployment-ready.
  hello-service:
    build: ./internal-microservices/hello-service/.
    restart: on-failure
    ports: 1000:3000
    env_file:
      - ./internal-microservices/hello-service/.env
  
  # database service
  mongodb:
    image: mongo
    restart: always
    ports: 27017:27017
    volumes:
      - ./data/mongod/:/data/db
    env_file:
      - ./databases/mongo/.env

  # the authentication microservice
  authentication:
    build: ./internal-microservices/authentication-service/.
    restart: on-failure
    ports: 1001:3000
    env_file:
      - ./internal-microservices/authentication-service/.env
    depends_on:
      - mongodb # want mongodb to start up before this.
  

  # mysql database
  mysqldb:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - ./databases/mysql/.env
    volumes:
      - ./data/mysqld:/var/lib/mysql

  # blog microservice
  ghost:
    image: ghost:4-alpine
    restart: on-failure
    ports: 2000:2368
    env_file:
      - ./external-microservices/ghost/.env
    volumes:
      - ./data/ghost/:/var/lib/ghost/content
    depends_on:
      - mysqldb
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 4000:8080

  # database viewer service
  mongo-express:
    image: mongo-express
    restart: always
    ports: 4001:8081
    depends_on:
      - mongodb
  

  nginx:
    build: ./loadbalancer/.
    restart: on-failure
    volumes:
      - ./loadbalancer/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    depends_on:
      - hello-service
      - mongo-express
      - adminer
      - mysqldb
      - mongodb
      - ghost
      - authentication
      - hello-service
    


